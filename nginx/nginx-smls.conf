# Nginx configuration for SMLS (Social Media Login Service)
# This configuration sets up a reverse proxy to serve SMLS at a clean URL
# instead of requiring the port number and full path.
# 
# This template will be automatically configured by the setup script based on BASE_URL
# The setup script will replace DOMAIN and PATH placeholders with actual values
# 
# This configuration is designed to work in user-level mode without root privileges

# User-level nginx configuration
# All paths are relative to the nginx directory
worker_processes 1;
error_log logs/error.log;
pid nginx.pid;

# Disable daemon mode and prevent system path access
daemon off;
master_process off;

events {
    worker_connections 1024;
}

http {
    # Basic MIME types (no system file dependency)
    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        image/png                             png;
        image/svg+xml                         svg svgz;
        image/webp                            webp;
        image/x-icon                          ico;
        application/javascript                js;
        application/json                      json;
        application/pdf                       pdf;
        text/plain                            txt;
        application/octet-stream              bin exe dll;
        application/octet-stream              deb;
        application/octet-stream              dmg;
        application/octet-stream              iso img;
        application/octet-stream              msi msp msm;
    }
    default_type  application/octet-stream;
    
    # Logging
    access_log logs/access.log;
    
    # Basic settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    server {
        listen 8080;  # Use non-privileged port for user-level deployment
        server_name DOMAIN www.DOMAIN;
        
        # Main SMLS application location
        location PATH {
            # Remove the PATH prefix before forwarding to Flask app
            rewrite ^PATH(.*)$ $1 break;
            
            # Proxy to the Flask application running on localhost:5000
            # Note: Flask runs on 5000, nginx on 8080
            proxy_pass http://127.0.0.1:5000;
            
            # Set headers for proper proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Handle WebSocket connections (if needed in the future)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings for better performance
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Optional: Serve static files directly through nginx for better performance
        # Uncomment the following block if you want nginx to serve static files
        # location PATH/static/ {
        #     alias /path/to/your/smls/src/static/;
        #     expires 1y;
        #     add_header Cache-Control "public, immutable";
        # }
        
        # Optional: Health check endpoint
        location PATH/health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Optional: Block access to sensitive files
        location ~ PATH/\.(env|git|pyc|pyo) {
            deny all;
            return 404;
        }
        
        # Default location for other requests (optional)
        location / {
            # You can add a default page or redirect here
            # For example, redirect to SMLS:
            # return 301 PATH/;
            
            # Or serve a simple index page:
            return 200 "Welcome to DOMAIN. SMLS is available at PATH";
            add_header Content-Type text/plain;
        }
    }
}

# Optional: HTTPS configuration (uncomment and configure if you have SSL certificates)
# Note: For user-level deployment, you'll need to use a different port (e.g., 8443)
# server {
#     listen 8443 ssl http2;  # Use non-privileged port
#     server_name DOMAIN www.DOMAIN;
#     
#     # SSL configuration
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Same location blocks as above
#     location PATH {
#         rewrite ^PATH(.*)$ $1 break;
#         proxy_pass http://127.0.0.1:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_set_header X-Forwarded-Host $host;
#         proxy_set_header X-Forwarded-Port $server_port;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#         proxy_buffering on;
#         proxy_buffer_size 4k;
#         proxy_buffers 8 4k;
#     }
# }