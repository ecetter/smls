# SMLS Security Configuration
# Production security settings for long-term stability

# Environment Variables (set these in your deployment)
# SECRET_KEY=your-very-secure-secret-key-here
# FLASK_ENV=production
# FLASK_DEBUG=False

# Security Headers (automatically applied by wsgi.py)
# X-Content-Type-Options: nosniff
# X-Frame-Options: DENY
# X-XSS-Protection: 1; mode=block
# Strict-Transport-Security: max-age=31536000; includeSubDomains
# Referrer-Policy: strict-origin-when-cross-origin
# Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'

# Session Security
# SESSION_COOKIE_SECURE=True (HTTPS only)
# SESSION_COOKIE_HTTPONLY=True (XSS protection)
# SESSION_COOKIE_SAMESITE=Lax (CSRF protection)
# PERMANENT_SESSION_LIFETIME=3600 (1 hour timeout)

# File Upload Limits
# MAX_CONTENT_LENGTH=16MB

# OAuth Security
# - Use HTTPS for all OAuth callbacks
# - Validate state parameters
# - Use secure random state generation
# - Implement proper token storage

# Database Security (if using database)
# - Use connection pooling
# - Encrypt sensitive data
# - Regular backups
# - Access controls

# Logging Security
# - Log all authentication attempts
# - Monitor for suspicious activity
# - Rotate logs regularly
# - Secure log file permissions

# Network Security
# - Use firewall rules
# - Limit access to management ports
# - Use VPN for admin access
# - Monitor network traffic

# Process Security
# - Run as non-root user
# - Use process isolation
# - Monitor resource usage
# - Implement rate limiting

# Backup and Recovery
# - Regular automated backups
# - Test recovery procedures
# - Version control for configuration
# - Disaster recovery plan
